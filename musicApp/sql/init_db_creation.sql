-- MySQL Script generated by MySQL Workbench
-- Thu Nov 24 01:28:26 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema vinylZone
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `vinylZone` ;

-- -----------------------------------------------------
-- Schema vinylZone
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `vinylZone` DEFAULT CHARACTER SET utf8 ;
USE `vinylZone` ;

-- -----------------------------------------------------
-- Table `vinylZone`.`ALBUM`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vinylZone`.`ALBUM` ;

CREATE TABLE IF NOT EXISTS `vinylZone`.`ALBUM` (
  `AlbumID` INT NOT NULL,
  `Title` VARCHAR(45) NULL,
  `Duration` VARCHAR(45) NULL,
  `ReleaseDate` DATETIME NULL,
  `Description` VARCHAR(250) NULL,
  `GenreID` INT NOT NULL,
  `MusicianID` INT NOT NULL,
  PRIMARY KEY (`AlbumID`),
  UNIQUE INDEX `AlbumID_UNIQUE` (`AlbumID` ASC) VISIBLE,
  INDEX `fk_ALBUM_GENRE1_idx` (`GenreID` ASC) VISIBLE,
  INDEX `fk_ALBUM_MUSICIAN1_idx` (`MusicianID` ASC) VISIBLE,
  CONSTRAINT `fk_ALBUM_GENRE1`
    FOREIGN KEY (`GenreID`)
    REFERENCES `vinylZone`.`GENRE` (`GenreID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ALBUM_MUSICIAN1`
    FOREIGN KEY (`MusicianID`)
    REFERENCES `vinylZone`.`MUSICIAN` (`MusicianID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vinylZone`.`ALBUM_TRACK_INT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vinylZone`.`ALBUM_TRACK_INT` ;

CREATE TABLE IF NOT EXISTS `vinylZone`.`ALBUM_TRACK_INT` (
  `AlbumID` INT NOT NULL,
  `TrackID` INT NOT NULL,
  `AlbumTrackID` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`AlbumTrackID`),
  INDEX `fk_ALBUM_has_TRACK_TRACK1_idx` (`TrackID` ASC) VISIBLE,
  INDEX `fk_ALBUM_has_TRACK_ALBUM1_idx` (`AlbumID` ASC) VISIBLE,
  CONSTRAINT `fk_ALBUM_has_TRACK_ALBUM1`
    FOREIGN KEY (`AlbumID`)
    REFERENCES `vinylZone`.`ALBUM` (`AlbumID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ALBUM_has_TRACK_TRACK1`
    FOREIGN KEY (`TrackID`)
    REFERENCES `vinylZone`.`TRACK` (`TrackID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vinylZone`.`GENRE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vinylZone`.`GENRE` ;

CREATE TABLE IF NOT EXISTS `vinylZone`.`GENRE` (
  `GenreID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  `Description` VARCHAR(250) NULL,
  PRIMARY KEY (`GenreID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vinylZone`.`MUSICIAN`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vinylZone`.`MUSICIAN` ;

CREATE TABLE IF NOT EXISTS `vinylZone`.`MUSICIAN` (
  `MusicianID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  PRIMARY KEY (`MusicianID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vinylZone`.`MUSICIAN_TRACK_INT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vinylZone`.`MUSICIAN_TRACK_INT` ;

CREATE TABLE IF NOT EXISTS `vinylZone`.`MUSICIAN_TRACK_INT` (
  `MusicianID` INT NOT NULL,
  `TrackID` INT NOT NULL,
  `MusicianTrackID` VARCHAR(45) NOT NULL,
  INDEX `fk_MUSICIAN_has_TRACK_TRACK1_idx` (`TrackID` ASC) VISIBLE,
  INDEX `fk_MUSICIAN_has_TRACK_MUSICIAN1_idx` (`MusicianID` ASC) VISIBLE,
  PRIMARY KEY (`MusicianTrackID`),
  CONSTRAINT `MusicianFK`
    FOREIGN KEY (`MusicianID`)
    REFERENCES `vinylZone`.`MUSICIAN` (`MusicianID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `TrackFK`
    FOREIGN KEY (`TrackID`)
    REFERENCES `vinylZone`.`TRACK` (`TrackID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vinylZone`.`PLAYLIST`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vinylZone`.`PLAYLIST` ;

CREATE TABLE IF NOT EXISTS `vinylZone`.`PLAYLIST` (
  `PlaylistID` INT NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(45) NULL,
  `Duration` TIME NULL,
  `Description` VARCHAR(250) NULL,
  `UserID` INT NOT NULL,
  `GenreID` INT NOT NULL,
  PRIMARY KEY (`PlaylistID`),
  INDEX `fk_PLAYLIST_USER1_idx` (`UserID` ASC) VISIBLE,
  INDEX `fk_PLAYLIST_GENRE1_idx` (`GenreID` ASC) VISIBLE,
  CONSTRAINT `fk_PLAYLIST_USER1`
    FOREIGN KEY (`UserID`)
    REFERENCES `vinylZone`.`USER` (`userID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_PLAYLIST_GENRE1`
    FOREIGN KEY (`GenreID`)
    REFERENCES `vinylZone`.`GENRE` (`GenreID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vinylZone`.`PLAYLIST_TRACK_INT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vinylZone`.`PLAYLIST_TRACK_INT` ;

CREATE TABLE IF NOT EXISTS `vinylZone`.`PLAYLIST_TRACK_INT` (
  `PlaylistID` INT NOT NULL,
  `TrackID` INT NOT NULL,
  `PlaylistTrackID` INT NOT NULL,
  PRIMARY KEY (`PlaylistTrackID`),
  INDEX `fk_PLAYLIST_has_TRACK_TRACK1_idx` (`TrackID` ASC) VISIBLE,
  INDEX `fk_PLAYLIST_has_TRACK_PLAYLIST1_idx` (`PlaylistID` ASC) VISIBLE,
  CONSTRAINT `fk_PLAYLIST_has_TRACK_PLAYLIST1`
    FOREIGN KEY (`PlaylistID`)
    REFERENCES `vinylZone`.`PLAYLIST` (`PlaylistID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_PLAYLIST_has_TRACK_TRACK1`
    FOREIGN KEY (`TrackID`)
    REFERENCES `vinylZone`.`TRACK` (`TrackID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vinylZone`.`TRACK`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vinylZone`.`TRACK` ;

CREATE TABLE IF NOT EXISTS `vinylZone`.`TRACK` (
  `TrackID` INT NOT NULL AUTO_INCREMENT,
  `Duration` TIME NULL,
  `Title` VARCHAR(45) NULL,
  `Lyrics` LONGTEXT NULL,
  `ReleaseDate` DATETIME NULL,
  `MusicianID` INT NOT NULL,
  `GenreID` INT NOT NULL,
  PRIMARY KEY (`TrackID`, `MusicianID`, `GenreID`),
  INDEX `fk_TRACK_MUSICIAN1_idx` (`MusicianID` ASC) VISIBLE,
  INDEX `fk_TRACK_GENRE1_idx` (`GenreID` ASC) VISIBLE,
  CONSTRAINT `fk_TRACK_MUSICIAN1`
    FOREIGN KEY (`MusicianID`)
    REFERENCES `vinylZone`.`MUSICIAN` (`MusicianID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_TRACK_GENRE1`
    FOREIGN KEY (`GenreID`)
    REFERENCES `vinylZone`.`GENRE` (`GenreID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vinylZone`.`USER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vinylZone`.`USER` ;

CREATE TABLE IF NOT EXISTS `vinylZone`.`USER` (
  `userID` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(50) NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(8) NULL,
  `biography` VARCHAR(200) NULL,
  `profilePhoto` BLOB NULL,
  `role` VARCHAR(45) NULL,
  PRIMARY KEY (`userID`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
